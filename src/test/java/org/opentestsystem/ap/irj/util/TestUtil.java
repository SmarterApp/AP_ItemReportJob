package org.opentestsystem.ap.irj.util;

import java.io.IOException;
import java.io.InputStream;
import java.util.Collections;
import java.util.List;

import lombok.Getter;
import org.opentestsystem.ap.common.exception.SystemException;
import org.opentestsystem.ap.common.model.EbsrItem;
import org.opentestsystem.ap.common.model.EqItem;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.McItem;
import org.opentestsystem.ap.common.model.MiItem;
import org.opentestsystem.ap.common.model.MsItem;
import org.opentestsystem.ap.common.model.SaItem;
import org.opentestsystem.ap.common.model.StimItem;
import org.opentestsystem.ap.common.model.TiItem;
import org.opentestsystem.ap.common.model.TutItem;
import org.opentestsystem.ap.common.model.ValidationResult;
import org.opentestsystem.ap.common.model.WerItem;
import org.opentestsystem.ap.common.saaif.JsonModelAssembler;
import org.opentestsystem.ap.common.saaif.ValidationResultAssembler;

@Getter
public class TestUtil {

    public static final String ITEM_ID = "123";

    public static final String VALIDATION_FILE = "validation.json";

    public static final String EBSR_FILE = "ebsr-item.json";

    public static final String EQ_FILE = "eq-item.json";

    public static final String MC_FILE = "mc-item.json";

    public static final String MI_FILE = "mi-item.json";

    public static final String MS_FILE = "ms-item.json";

    public static final String SA_FILE = "sa-item.json";

    public static final String STIM_FILE = "stimulus.json";

    public static final String TI_FILE = "ti-item.json";

    public static final String TUT_FILE = "tut-item.json";

    public static final String WER_FILE = "wer-item.json";

    private JsonModelAssembler jsonModelAssembler = new JsonModelAssembler();

    private ValidationResultAssembler validationResultAssembler = new ValidationResultAssembler();

    private List<ValidationResult> validationResults;

    public TestUtil() {
        validationResults = readValidationResults();
    }

    public EbsrItem readEbsrItem() {
        return (EbsrItem) readItem(EBSR_FILE);
    }

    public EqItem readEqItem() {
        return (EqItem) readItem(EQ_FILE);
    }

    public McItem readMcItem() {
        return (McItem) readItem(MC_FILE);
    }

    public MiItem readMiItem() {
        return (MiItem) readItem(MI_FILE);
    }

    public MsItem readMsItem() {
        return (MsItem) readItem(MS_FILE);
    }

    public SaItem readSaItem() {
        return (SaItem) readItem(SA_FILE);
    }

    public StimItem readStimulus() {
        return (StimItem) readItem(STIM_FILE);
    }

    public TutItem readTutItem() {
        return (TutItem) readItem(TUT_FILE);
    }

    public WerItem readWerItem() {
        return (WerItem) readItem(WER_FILE);
    }

    public TiItem readTiItem() {
        return (TiItem) readItem(TI_FILE);
    }

    public Item readItem(final String file) {
        Item item = null;
        try {
            try (InputStream input = readFile(file)) {
                item = jsonModelAssembler.readItem(input);
            }
        } catch (IOException e) {
            throw new SystemException(e);
        }
        return item;
    }

    public List<ValidationResult> readValidationResults() {
        List<ValidationResult> results = Collections.emptyList();
        try (InputStream input = readValidationFile()) {
            results = validationResultAssembler.readValidationResults(input);
        } catch (IOException e) {
            throw new SystemException(e);
        }
        return results;
    }

    public InputStream readValidationFile() {
        return readFile(VALIDATION_FILE);
    }

    public InputStream readFile(final String file) {
        return this.getClass().getClassLoader().getResourceAsStream(file);
    }

    public TiItem newTiItem() {
        final TiItem item = new TiItem(ITEM_ID);
        return item;
    }
}
