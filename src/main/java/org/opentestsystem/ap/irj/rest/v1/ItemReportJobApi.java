/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestsystem.ap.irj.rest.v1;

import io.swagger.annotations.Api;
import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.irj.service.ItemReportManager;
import org.opentestsystem.ap.irj.service.ItemReportService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.nio.file.Path;
import java.util.List;

/**
 *
 */
@Slf4j
@RestController
@RequestMapping("/api/v1/items")
@Api
public class ItemReportJobApi {

    private final ApplicationContext applicationContext;

    private final ItemReportService service;

    @Autowired
    public ItemReportJobApi(ApplicationContext applicationContext, final ItemReportService service) {
        this.applicationContext = applicationContext;
        this.service = service;
    }

    @GetMapping("/find")
    public List<String> getAllItems() {
        return service.findAllItemNames();
    }

    @GetMapping("/local/list")
    public List<Path> getLocalItems() {
        return service.findFoldersInLocalItemBank();
    }

    @GetMapping("/local/delete")
    public void deleteLocalItemBank() {
        service.deleteLocalItemBank();
    }

    @GetMapping("/local/create")
    public void createLocalItemBankFolder() {
        service.createLocalItemBankFolder();
    }

    // ------------------------------------------------------------------------

    @GetMapping("/local/report/run")
    public String runReport() {
        final ItemReportManager manager = applicationContext.getBean(ItemReportManager.class);
        manager.execute();
        return "Done";
    }

    @GetMapping("/local/report/list")
    public List<Path> getReportRepositoryFiles() {
        return service.findReportRepositoryFiles();
    }

    @GetMapping("/local/report/push")
    public void stageAndCommitAllFiles() {
        service.stageAndCommitAllFiles();
    }

    @GetMapping("/local/report/delete")
    public void deleteReportRepository() {
        service.deleteReportRepository();
    }
}
