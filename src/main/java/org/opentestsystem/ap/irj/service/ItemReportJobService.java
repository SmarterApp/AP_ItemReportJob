package org.opentestsystem.ap.irj.service;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;

import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.common.config.ItemBankProperties;
import org.opentestsystem.ap.common.repository.ItemRepository;
import org.opentestsystem.ap.common.util.SystemException;
import org.springframework.stereotype.Component;

import static java.util.stream.Collectors.toList;

@Slf4j
@Component
public class ItemReportJobService {

    private final ItemBankProperties itemBankProperties;

    private final ItemRepository itemRepository;

    public ItemReportJobService(ItemBankProperties itemBankProperties, ItemRepository itemRepository) {
        this.itemBankProperties = itemBankProperties;
        this.itemRepository = itemRepository;
    }

    public List<String> findAllItemNames() {
        return itemRepository.findAllItemNames();
    }

    public List<Path> findFoldersInLocalItemBank() {
        log.debug("cleanupFolder: path {}, threshold {}", itemBankProperties.getLocalBaseDir());
        final Path rootPath = Paths.get(itemBankProperties.getLocalBaseDir());
        try {
            return Files.walk(rootPath, 1).filter(Files::isDirectory).collect(toList());
        } catch (IOException e) {
            throw new SystemException("Error getting folders in local item bank", e);
        }
    }
}
