package org.opentestsystem.ap.irj.model;

import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Data;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.ValidationResult;

import static java.lang.String.valueOf;
import static org.apache.commons.lang3.StringUtils.EMPTY;

@Data
public class AbstractItemReport<T extends Item> implements ItemReport {

    @JsonIgnore
    private T item;

    private String reportStatus;

    @JsonIgnore
    private List<ValidationResult> validationResults = new ArrayList<>(0);

    public AbstractItemReport(final T item, final String reportStatus, final List<ValidationResult> validationResults) {
        this.item = item;
        this.reportStatus = reportStatus;
        setValidationResults(validationResults);
    }

    public void setValidationResults(final List<ValidationResult> validationResults) {
        this.validationResults.clear();

        if (validationResults != null) {
            this.validationResults.addAll(validationResults);
        }
    }

    @Override
    public String getReportStatus() {
        return reportStatus;
    }

    @Override
    public String getSubject() {
        return EMPTY;
    }

    @Override
    public String getGrade() {
        return EMPTY;
    }

    @Override
    public String getPassageName() {
        return EMPTY;
    }

    @Override
    public String getPrimaryClaim() {
        return EMPTY;
    }

    @Override
    public String getPrimaryAssessmentTarget() {
        return EMPTY;
    }

    @Override
    public String getContentTaskModel() {
        return EMPTY;
    }

    @Override
    public String getDepthOfKnowledge() {
        return EMPTY;
    }

    @Override
    public String getStimulusFormat() {
        return EMPTY;
    }

    @Override
    public String getMinGrade() {
        return EMPTY;
    }

    @Override
    public String getMaxGrade() {
        return EMPTY;
    }

    @Override
    public String getWritingPurpose() {
        return EMPTY;
    }

    @Override
    public String getSecondaryClaim() {
        return EMPTY;
    }

    @Override
    public String getTertiaryClaim() {
        return EMPTY;
    }

    @Override
    public String getQuaternaryClaim() {
        return EMPTY;
    }

    @Override
    public String getClaim2Category() {
        return EMPTY;
    }

    @Override
    public String getClaim2SubCategory() {
        return EMPTY;
    }

    @Override
    public String getContentDomain() {
        return EMPTY;
    }

    @Override
    public String getSecondaryAssessmentTarget() {
        return EMPTY;
    }

    @Override
    public String getTertiaryAssessmentTarget() {
        return EMPTY;
    }

    @Override
    public String getQuaternaryAssessmentTarget() {
        return EMPTY;
    }

    @Override
    public String getPrimaryContentDomain() {
        return EMPTY;
    }

    @Override
    public String getPrimaryCommonCoreStandard() {
        return EMPTY;
    }

    @Override
    public String getSecondaryContentDomain() {
        return EMPTY;
    }

    @Override
    public String getSecondaryCommonCoreStandard() {
        return EMPTY;
    }

    @Override
    public String getTertiaryContentDomain() {
        return EMPTY;
    }

    @Override
    public String getTertiaryCommonCoreStandard() {
        return EMPTY;
    }

    @Override
    public String getQuaternaryContentDomain() {
        return EMPTY;
    }

    @Override
    public String getQuaternaryCommonCoreStandard() {
        return EMPTY;
    }

    @Override
    public String getItemPoint() {
        return EMPTY;
    }

    @Override
    public String getScoringEngine() {
        return EMPTY;
    }

    @Override
    public String getScoringPoints() {
        return EMPTY;
    }

    @Override
    public String getAccessibilityLanguageComplexity() {
        return EMPTY;
    }

    @Override
    public String getLength() {
        return EMPTY;
    }

    @Override
    public String getReadabilityFleschKincaid() {
        return EMPTY;
    }

    @Override
    public String getReadabilityLexile() {
        return EMPTY;
    }

    @Override
    public String getWordCount() {
        return EMPTY;
    }

    @Override
    public String getKnowledgeDemands() {
        return EMPTY;
    }

    @Override
    public String getLanguageFeatures() {
        return EMPTY;
    }

    @Override
    public String getMeaningPurpose() {
        return EMPTY;
    }

    @Override
    public String getStructure() {
        return EMPTY;
    }

    @Override
    public String getGrade8Or11OnlyAlgebraDescriptor() {
        return EMPTY;
    }

    @Override
    public String getCalculator() {
        return EMPTY;
    }

    @Override
    public String getCopyrightHolder() {
        return EMPTY;
    }

    @Override
    public String getCopyrightHolderOther() {
        return EMPTY;
    }

    @Override
    public String getTestCategory() {
        return EMPTY;
    }

    @Override
    public String getPerformanceTask() {
        return EMPTY;
    }

    @Override
    public String getWorkflowStatusCode() {
        return getItem().getCore().getWorkflowStatusCode();
    }

    @Override
    public String getAslRequired() {
        return getItem().getAsl().getAslRequired();
    }

    @Override
    public String getAslProvided() {
        return valueOf(getItem().getAsl().isAslProvided());
    }

    @Override
    public String getBrailleRequired() {
        return getItem().getBraille().getBrailleRequired();
    }

    @Override
    public String getBrailleProvided() {
        return valueOf(getItem().getBraille().isBrailleProvided());
    }

    @Override
    public String getCcRequired() {
        return getItem().getCc().getCcRequired();
    }

    @Override
    public String getCcProvided() {
        return valueOf(getItem().getCc().isCcProvided());
    }

    @Override
    public String getTranslationRequired() {
//        return getItem().getTranslation().getTranslationRequired();
        return EMPTY;
    }

    @Override
    public String getTranslationProvided() {
//        return getItem().getTranslation().isTranslationProvided();
        return EMPTY;
    }

    @Override
    public String getImageProductionFilesProvided() {
//        return getItem().getImages().;
        return EMPTY;
    }

    @Override
    public String getAudioProductionFilesProvided() {
//        return getItem().getAudio().;
        return EMPTY;
    }

    @Override
    public String getValidationFailureCount() {
        return valueOf(validationResults.size());
    }

    @Override
    public String getStimID() {
        return EMPTY;
    }

    @Override
    public String getTutorialID() {
        return EMPTY;
    }

    @Override
    public String getEnemyItemIDs() {
        return EMPTY;
    }

    @Override
    public String getItemContent() {
        return EMPTY;
    }

    @Override
    public String getEbsrPartAOptionCount() {
        return EMPTY;
    }

    @Override
    public String getEbsrPartBOptionCount() {
        return EMPTY;
    }

    @Override
    public String getEbsrPartBCorrectOptionCount() {
        return EMPTY;
    }

    @Override
    public String getEqEquationEditor() {
        return EMPTY;
    }

    @Override
    public String getMcOptionCount() {
        return EMPTY;
    }

    @Override
    public String getMiTableColumnCount() {
        return EMPTY;
    }

    @Override
    public String getMiTableRowCount() {
        return EMPTY;
    }

    @Override
    public String getMiAnswerCount() {
        return EMPTY;
    }

    @Override
    public String getMiCorrectAnswerCount() {
        return EMPTY;
    }

    @Override
    public String getMsOptionCount() {
        return EMPTY;
    }

    @Override
    public String getMsCorrectOptionCount() {
        return EMPTY;
    }

    @Override
    public String getTiTableColumnCount() {
        return EMPTY;
    }

    @Override
    public String getTiTableRowCount() {
        return EMPTY;
    }

    @Override
    public String getTiAnswerCount() {
        return EMPTY;
    }

    // ------------------------------------------------------------------------

    @Override
    @JsonProperty("Item ID")
    public String getItemId() {
        return getItem().getId();
    }

    @Override
    public String getItemType() {
        return getItem().getType();
    }

    // ------------------------------------------------------------------------

    protected T getItem() {
        return item;
    }
}
