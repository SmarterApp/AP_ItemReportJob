package org.opentestsystem.ap.irj.model;

import java.util.List;

import lombok.Getter;
import org.opentestsystem.ap.common.model.EbsrItem;
import org.opentestsystem.ap.common.model.EbsrItemCore;
import org.opentestsystem.ap.common.model.ItemOption;
import org.opentestsystem.ap.common.model.ValidationResult;
import org.opentestsystem.ap.irj.util.ReportUtil;

import static java.lang.String.valueOf;

public class EbsrItemReport extends AbstractAssessmentItemReport<EbsrItem> {

    final EbsrItemCore core;

    public EbsrItemReport(final EbsrItem item, final String reportStatus, final List<ValidationResult> validationResults) {
        super(item, reportStatus, validationResults);
        core = getItem().getCore();
    }

    @Override
    public String getEbsrPartAOptionCount() {
        return valueOf(core.getPartAOptions().size());
    }

    @Override
    public String getEbsrPartBOptionCount() {
        return valueOf(core.getPartBOptions().size());
    }

    @Override
    public String getEbsrPartBCorrectOptionCount() {
        long count = core.getPartBOptions().stream().filter(ItemOption::isCorrectAnswer).count();
        return valueOf(count);
    }

    @Override
    public String getItemContent() {
        final Content content = new Content(core);
        return ReportUtil.toJsonString(content);
    }

    @Getter
    private static class Content {

        private final List<ItemOption> partAOptions;

        private final String partAPrompt;

        private final List<ItemOption> partBOptions;

        private final String partBPrompt;

        private final String prompt;

        private Content(final EbsrItemCore core) {
            partAOptions = core.getPartAOptions();
            partAPrompt = core.getPartAPrompt();
            partBOptions = core.getPartBOptions();
            partBPrompt = core.getPartBPrompt();
            prompt = core.getPrompt();
        }
    }
}
